{"version":3,"file":"static/js/755.a1e286b7.chunk.js","mappings":"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","sources":["comp/Data Display/ExtraData.js"],"sourcesContent":["import { memo, useDeferredValue } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport useAddData from \"../API & Data/useAddData\";\r\nimport {\r\n  Flex,\r\n  Text,\r\n  Divider,\r\n  Badge,\r\n  useColorMode,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport const ExtraTVData = memo(({ id }) => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  // Additional data fetching\r\n  const data = useDeferredValue(useAddData(id, \"tv\"));\r\n\r\n  // Due to React bug about Object & Array distinction\r\n  const origins =\r\n    data.fullOrigin !== undefined\r\n      ? Object.values(data.fullOrigin).filter(\r\n          (origin, index, arr) => arr.length > 0 && origin.length > 0\r\n        )\r\n      : undefined;\r\n\r\n  const genres =\r\n    typeof data.genres === \"object\" && data.genres.length > 0\r\n      ? Object.values(data.genres)\r\n      : undefined;\r\n\r\n  return (\r\n    <>\r\n      {data.directors !== undefined && (\r\n        <Flex fontSize={\"xl\"} gap=\"0.15rem\">\r\n          <Box fontWeight={500} fontStyle={\"italic\"}>\r\n            <Text\r\n              fontWeight={700}\r\n              display={\"inline-block\"}\r\n              fontStyle={\"initial\" || \"-moz-initial\"}>\r\n              Directors:\r\n            </Text>{\" \"}\r\n            {data.directors}\r\n          </Box>\r\n        </Flex>\r\n      )}\r\n      {data.casts !== undefined && (\r\n        <Flex fontSize={\"xl\"} gap=\"0.15rem\" mb=\".25rem\" wrap={\"wrap\"}>\r\n          <Box fontWeight={500} fontStyle={\"italic\"}>\r\n            <Text\r\n              fontWeight={700}\r\n              display={\"inline-block\"}\r\n              fontStyle={\"initial\" || \"-moz-initial\"}>\r\n              Casts:\r\n            </Text>{\" \"}\r\n            {data.casts}\r\n          </Box>\r\n        </Flex>\r\n      )}\r\n      <Flex\r\n        fontSize={\"xl\"}\r\n        gap=\"0.15rem\"\r\n        align={\"center\"}\r\n        height={\"max-content\" || \"-moz-max-content\"}>\r\n        {data.episodes !== \"In Production\" && data.status !== \"Planned\" && (\r\n          <>\r\n            {data.seasons !== undefined && (\r\n              <>\r\n                <Box fontWeight={500} fontStyle={\"italic\"}>\r\n                  <Text\r\n                    fontWeight={700}\r\n                    display={\"inline-block\"}\r\n                    fontStyle={\"initial\" || \"-moz-initial\"}>\r\n                    Current Season:\r\n                  </Text>{\" \"}\r\n                  {data.episodes !== undefined\r\n                    ? data.episodes.season <= data.seasons &&\r\n                      `Season ${data.episodes.season}`\r\n                    : `Season ${data.seasons}`}\r\n                </Box>\r\n              </>\r\n            )}\r\n            {data.episodes !== undefined && (\r\n              <>\r\n                <Flex h=\"1.75rem\" gap=\".4rem\">\r\n                  <Divider\r\n                    orientation=\"vertical\"\r\n                    border={\"1.75px solid cyan\"}\r\n                    ml=\".5rem\"\r\n                  />\r\n                  <Divider\r\n                    orientation=\"vertical\"\r\n                    border={\"1.75px solid cyan\"}\r\n                    mr=\".5rem\"\r\n                  />\r\n                </Flex>\r\n                <Box fontWeight={500} fontStyle={\"italic\"}>\r\n                  <Text\r\n                    fontWeight={700}\r\n                    display={\"inline-block\"}\r\n                    fontStyle={\"initial\" || \"-moz-initial\"}>\r\n                    Last Episodes:\r\n                  </Text>{\" \"}\r\n                  Episode {data.episodes.episode}\r\n                </Box>\r\n                <Badge\r\n                  fontSize={\"md\"}\r\n                  variant={\"solid\"}\r\n                  bgColor={\"#7D79A8\"}\r\n                  color={colorMode === \"dark\" ? \"whiteAlpha.900\" : null}\r\n                  borderRadius={\"100vw\"}\r\n                  px=\".75rem\"\r\n                  py=\".3rem\"\r\n                  ml=\".75rem\">\r\n                  Season {data.episodes.season}\r\n                </Badge>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </Flex>\r\n      <Flex mt=\".4rem\" gap=\"1rem\" wrap=\"wrap\">\r\n        {data.status === \"Ended\" && (\r\n          <Badge\r\n            fontSize={\"lg\"}\r\n            variant={\"solid\"}\r\n            fontStyle={\"italic\"}\r\n            bgColor={\"pink.400\"}\r\n            color={colorMode === \"dark\" ? \"whiteAlpha.900\" : null}\r\n            borderRadius={\"100vw\"}\r\n            px=\".75rem\"\r\n            py=\".3rem\">\r\n            Ended\r\n          </Badge>\r\n        )}\r\n        {(data.status === \"Canceled\" || data.status === \"Cancelled\") && (\r\n          <Badge\r\n            fontSize={\"lg\"}\r\n            variant={\"solid\"}\r\n            fontStyle={\"italic\"}\r\n            bgColor={\"red.500\"}\r\n            color={colorMode === \"dark\" ? \"whiteAlpha.900\" : null}\r\n            borderRadius={\"100vw\"}\r\n            px=\".75rem\"\r\n            py=\".3rem\">\r\n            Canceled\r\n          </Badge>\r\n        )}\r\n        {data.episodes !== undefined &&\r\n          data.seasons !== undefined &&\r\n          data.status !== \"Ended\" &&\r\n          data.episodes.season === data.seasons - 1 && (\r\n            <Badge\r\n              fontSize={\"lg\"}\r\n              variant={\"solid\"}\r\n              fontStyle={\"italic\"}\r\n              fontWeight={700}\r\n              bgColor={\"yellow.200\"}\r\n              color={colorMode === \"dark\" && \"gray.700\"}\r\n              borderRadius={\"100vw\"}\r\n              px=\".75rem\"\r\n              py=\".3rem\">\r\n              Returning for Season {data.seasons}\r\n            </Badge>\r\n          )}\r\n        {data.status === \"In Production\" && (\r\n          <Badge\r\n            fontSize={\"lg\"}\r\n            variant={\"solid\"}\r\n            fontStyle={\"italic\"}\r\n            fontWeight={700}\r\n            bgColor={\"yellow.200\"}\r\n            color={colorMode === \"dark\" && \"gray.700\"}\r\n            borderRadius={\"100vw\"}\r\n            px=\".75rem\"\r\n            py=\".3rem\">\r\n            In Production\r\n          </Badge>\r\n        )}\r\n        {data.status === \"Planned\" && (\r\n          <Badge\r\n            fontSize={\"lg\"}\r\n            variant={\"solid\"}\r\n            bgColor={\"green.200\"}\r\n            fontStyle={\"italic\"}\r\n            fontWeight={700}\r\n            color={colorMode === \"dark\" && \"gray.700\"}\r\n            borderRadius={\"100vw\"}\r\n            px=\".75rem\"\r\n            py=\".3rem\">\r\n            Planned\r\n          </Badge>\r\n        )}\r\n        {origins !== undefined &&\r\n          origins.map(origin => {\r\n            return (\r\n              <Badge\r\n                key={uuidv4()}\r\n                fontSize={\"lg\"}\r\n                bgColor={\"#00AAB9\"}\r\n                color={colorMode === \"dark\" ? \"whiteAlpha.900\" : null}\r\n                variant={\"solid\"}\r\n                borderRadius={\"100vw\"}\r\n                px=\".75rem\"\r\n                py=\".3rem\">\r\n                {origin}\r\n              </Badge>\r\n            );\r\n          })}\r\n        {genres !== undefined &&\r\n          genres.map(genre => {\r\n            return (\r\n              <Badge\r\n                key={uuidv4()}\r\n                fontSize={\"lg\"}\r\n                colorScheme=\"orange\"\r\n                color={colorMode === \"dark\" ? \"whiteAlpha.900\" : null}\r\n                variant={\"solid\"}\r\n                borderRadius={\"100vw\"}\r\n                px=\".75rem\"\r\n                py=\".3rem\">\r\n                {genre}\r\n              </Badge>\r\n            );\r\n          })}\r\n      </Flex>\r\n      {data.tagline !== undefined && (\r\n        <Text mt=\".5rem\" fontStyle={\"italic\"} fontSize={\"lg\"}>\r\n          {data.tagline.includes(`\"`) ? `${data.tagline}` : `\"${data.tagline}\"`}\r\n        </Text>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport const ExtraMovieData = memo(({ id }) => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  // Additional data fetching\r\n  const data = useDeferredValue(useAddData(id, \"movie\"));\r\n\r\n  const directors =\r\n    data.directors !== undefined && data.directors.length > 0\r\n      ? data.directors\r\n      : undefined;\r\n\r\n  // Due to React bug about Object & Array distinction\r\n  const origins =\r\n    data.fullOrigin !== undefined\r\n      ? Object.values(data.fullOrigin).filter(\r\n          (origin, index, arr) => arr.length > 0 && origin.length > 0\r\n        )\r\n      : undefined;\r\n\r\n  const genres =\r\n    typeof data.genres === \"object\" && data.genres.length > 0\r\n      ? Object.values(data.genres)\r\n      : undefined;\r\n\r\n  return (\r\n    <>\r\n      {data.studios !== undefined && (\r\n        <Flex fontSize={\"xl\"} gap=\"0.15rem\" wrap={\"wrap\"}>\r\n          <Box fontWeight={500} fontStyle={\"italic\"}>\r\n            <Text\r\n              fontWeight={700}\r\n              display={\"inline-block\"}\r\n              fontStyle={\"initial\" || \"-moz-initial\"}>\r\n              Created by:\r\n            </Text>{\" \"}\r\n            {data.studios}\r\n          </Box>\r\n        </Flex>\r\n      )}\r\n      {directors !== undefined && (\r\n        <Flex fontSize={\"xl\"} gap=\"0.15rem\">\r\n          <Box fontWeight={500} fontStyle={\"italic\"}>\r\n            <Text\r\n              fontWeight={700}\r\n              display={\"inline-block\"}\r\n              fontStyle={\"initial\" || \"-moz-initial\"}>\r\n              Directors:\r\n            </Text>{\" \"}\r\n            {data.directors}\r\n          </Box>\r\n        </Flex>\r\n      )}\r\n      {data.casts !== undefined && (\r\n        <Flex fontSize={\"xl\"} gap=\"0.15rem\" wrap={\"wrap\"}>\r\n          <Box fontWeight={500} fontStyle={\"italic\"}>\r\n            <Text\r\n              fontWeight={700}\r\n              display={\"inline-block\"}\r\n              fontStyle={\"initial\" || \"-moz-initial\"}>\r\n              Casts:\r\n            </Text>{\" \"}\r\n            {data.casts}\r\n          </Box>\r\n        </Flex>\r\n      )}\r\n      {data.runtime !== undefined && (\r\n        <Flex fontSize={\"xl\"} gap=\"0.15rem\" wrap={\"wrap\"}>\r\n          <Box fontWeight={500} fontStyle={\"italic\"}>\r\n            <Text\r\n              fontWeight={700}\r\n              display={\"inline-block\"}\r\n              fontStyle={\"initial\" || \"-moz-initial\"}>\r\n              Duration:\r\n            </Text>{\" \"}\r\n            {data.runtime}\r\n          </Box>\r\n        </Flex>\r\n      )}\r\n      <Flex mt=\".4rem\" gap=\"1rem\" wrap=\"wrap\">\r\n        {data.status === \"In Production\" && (\r\n          <Badge\r\n            fontSize={\"lg\"}\r\n            variant={\"solid\"}\r\n            fontStyle={\"italic\"}\r\n            fontWeight={700}\r\n            bgColor={\"yellow.200\"}\r\n            color={colorMode === \"dark\" && \"gray.700\"}\r\n            borderRadius={\"100vw\"}\r\n            px=\".75rem\"\r\n            py=\".3rem\">\r\n            In Production\r\n          </Badge>\r\n        )}\r\n        {data.status === \"Post Production\" && (\r\n          <Badge\r\n            fontSize={\"lg\"}\r\n            variant={\"solid\"}\r\n            fontStyle={\"italic\"}\r\n            fontWeight={700}\r\n            bgColor={\"orange.200\"}\r\n            color={colorMode === \"dark\" && \"blackAlpha.800\"}\r\n            borderRadius={\"100vw\"}\r\n            px=\".75rem\"\r\n            py=\".3rem\">\r\n            Post Production\r\n          </Badge>\r\n        )}\r\n        {data.status === \"Planned\" && (\r\n          <Badge\r\n            fontSize={\"lg\"}\r\n            variant={\"solid\"}\r\n            bgColor={\"green.200\"}\r\n            fontStyle={\"italic\"}\r\n            fontWeight={700}\r\n            color={colorMode === \"dark\" && \"gray.700\"}\r\n            borderRadius={\"100vw\"}\r\n            px=\".75rem\"\r\n            py=\".3rem\">\r\n            Planned\r\n          </Badge>\r\n        )}\r\n        {origins !== undefined &&\r\n          origins.map(origin => {\r\n            return (\r\n              <Badge\r\n                key={uuidv4()}\r\n                fontSize={\"lg\"}\r\n                bgColor={\"#00AAB9\"}\r\n                color={colorMode === \"dark\" ? \"whiteAlpha.900\" : null}\r\n                variant={\"solid\"}\r\n                borderRadius={\"100vw\"}\r\n                px=\".75rem\"\r\n                py=\".3rem\">\r\n                {origin}\r\n              </Badge>\r\n            );\r\n          })}\r\n        {genres !== undefined &&\r\n          genres.map(genre => {\r\n            return (\r\n              <Badge\r\n                key={uuidv4()}\r\n                fontSize={\"lg\"}\r\n                colorScheme=\"orange\"\r\n                color={colorMode === \"dark\" ? \"whiteAlpha.900\" : null}\r\n                variant={\"solid\"}\r\n                borderRadius={\"100vw\"}\r\n                px=\".75rem\"\r\n                py=\".3rem\">\r\n                {genre}\r\n              </Badge>\r\n            );\r\n          })}\r\n      </Flex>\r\n      {data.tagline !== undefined && (\r\n        <Text mt=\".5rem\" fontStyle={\"italic\"} fontSize={\"lg\"}>\r\n          {data.tagline.includes(`\"`) ? `${data.tagline}` : `\"${data.tagline}\"`}\r\n        </Text>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n"],"names":["ExtraTVData","memo","_ref","id","colorMode","useColorMode","data","useDeferredValue","useAddData","origins","undefined","fullOrigin","Object","values","filter","origin","index","arr","length","genres","_jsxs","_Fragment","children","directors","_jsx","Flex","fontSize","gap","Box","fontWeight","fontStyle","Text","display","casts","mb","wrap","align","height","episodes","status","seasons","season","concat","h","Divider","orientation","border","ml","mr","episode","Badge","variant","bgColor","color","borderRadius","px","py","mt","map","uuidv4","genre","colorScheme","tagline","includes","ExtraMovieData","_ref2","studios","runtime"],"sourceRoot":""}